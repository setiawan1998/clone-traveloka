{
  "_args": [
    [
      {
        "raw": "jest-serializer@24.0.0-alpha.2",
        "scope": null,
        "escapedName": "jest-serializer",
        "name": "jest-serializer",
        "rawSpec": "24.0.0-alpha.2",
        "spec": "24.0.0-alpha.2",
        "type": "version"
      },
      "D:\\react_native\\navigation\\node_modules\\metro-cache"
    ]
  ],
  "_from": "jest-serializer@24.0.0-alpha.2",
  "_hasShrinkwrap": false,
  "_id": "jest-serializer@24.0.0-alpha.2",
  "_location": "/metro-cache/jest-serializer",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jest-serializer_24.0.0-alpha.2_1540464657116_0.23198370791806933"
  },
  "_npmUser": {
    "name": "rubennorte",
    "email": "rubennorte@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jest-serializer@24.0.0-alpha.2",
    "scope": null,
    "escapedName": "jest-serializer",
    "name": "jest-serializer",
    "rawSpec": "24.0.0-alpha.2",
    "spec": "24.0.0-alpha.2",
    "type": "version"
  },
  "_requiredBy": [
    "/metro-cache"
  ],
  "_resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-24.0.0-alpha.2.tgz",
  "_shasum": "adcaa73ef49e56377f7fada19921c300b576e7f9",
  "_shrinkwrap": null,
  "_spec": "jest-serializer@24.0.0-alpha.2",
  "_where": "D:\\react_native\\navigation\\node_modules\\metro-cache",
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "dependencies": {},
  "description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it through a replacer/reviver.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-jLHHT71gyYdgMH5sFWP/e8bZjq/TC5iz9DQZlLsRE/7Er//m8WqyiNJs022FEc18PLq3jyk/z06N0xS6YlbsUA==",
    "shasum": "adcaa73ef49e56377f7fada19921c300b576e7f9",
    "tarball": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-24.0.0-alpha.2.tgz",
    "fileCount": 5,
    "unpackedSize": 21691,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0aAZCRA9TVsSAnZWagAAz3QP/jAtnLaoQZiN4uY79IZh\nuDA0ScF4KUTZlG9bVmmO5aDdp9BBIscthc3OEuVQ17wmk4cY5UDUJTtgrQSX\nBxEmDVBY2d73+EgUTKA5AijeGL2pG/Rh3mTZDQlZUqarNLzM1ALaz3FKE5j1\nfg735vSSZNpM2mNLBlT+mt3LKqNjODb9oE/LrMcWLTMtAFsq4mcE6yJZrbns\nF2opik2rUvZXkxrp1KDInaWcAd7g3F/p/NZ29ubrxFXpxnJfwEe61/QjhzFj\noMgizOV9TTqEgZdnPQMf0XYwBsaph8GHbvKDRji8KU1/Iq9BWiW6f3id1LsO\n/MQL2VSaN3NciEf9Mu8/M7kRzye7h9rLh9sfsz3/gWgiuer62l0M8BuqF0HY\n93IfwLkefZLOFfrRloy33bu8z4hGCqigidu11Z94M2WAM5iNmCrWdGcH3XRe\nkxIBRc/qa7h6gVwcPQPnsOYK8bkoqYY1pPsDGKEtIqrloj8s2KnUeyWM0qtl\nlv/z7MrYEthWJBPOLOf1B/1FxcGU2epzCBa+ruolIC2Xid1pqxIlqCwfvQBh\nlaU4yVuvvHm/OK9hNJPlpWh0bSUEfdVMNwznHOL91n0Ru6l/J24quj2Dx3NW\nT2GCnJcvTfVeb/MM7/Dm79u0YznK43d6wY/sEMYUYt7KU5C62j/DlbhnhtOX\nkhcq\r\n=hf9t\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6"
  },
  "gitHead": "c5e36835cff4b241327db9cf58c8f6f7227ed1f7",
  "homepage": "https://github.com/facebook/jest#readme",
  "license": "MIT",
  "main": "build/index.js",
  "maintainers": [
    {
      "name": "cpojer",
      "email": "christoph.pojer@gmail.com"
    },
    {
      "name": "fb",
      "email": "opensource+npm@fb.com"
    },
    {
      "name": "jeanlauliac",
      "email": "jean@lauliac.com"
    },
    {
      "name": "mjesun",
      "email": "mjesun@hotmail.com"
    },
    {
      "name": "rubennorte",
      "email": "rubennorte@gmail.com"
    }
  ],
  "name": "jest-serializer",
  "optionalDependencies": {},
  "readme": "# jest-serializer\n\nModule for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it through a replacer/reviver.\n\n## Install\n\n```sh\n$ yarn add jest-serializer\n```\n\n## API\n\nThree kinds of API groups are exposed:\n\n### In-memory serialization: `serialize` and `deserialize`\n\nThis set of functions take or return a `Buffer`. All the process happens in memory. This is useful when willing to transfer over HTTP, TCP or via UNIX pipes.\n\n```javascript\nimport {serialize, deserialize} from 'jest-serializer';\n\nconst myObject = {\n  foo: 'bar',\n  baz: [0, true, '2', [], {}],\n};\n\nconst buffer = serialize(myObject);\nconst myCopyObject = deserialize(buffer);\n```\n\n### Synchronous persistent filesystem: `readFileSync` and `writeFileSync`\n\nThis set of functions allow to send to disk a serialization result and retrieve it back, in a synchronous way. It mimics the `fs` API so it looks familiar.\n\n```javascript\nimport {readFileSync, writeFileSync} from 'jest-serializer';\n\nconst myObject = {\n  foo: 'bar',\n  baz: [0, true, '2', [], {}],\n};\n\nconst myFile = '/tmp/obj';\n\nwriteFileSync(myFile, myObject);\nconst myCopyObject = readFileSync(myFile);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/jest.git"
  },
  "version": "24.0.0-alpha.2"
}
