{
  "_args": [
    [
      {
        "raw": "create-react-context@^0.2.3",
        "scope": null,
        "escapedName": "create-react-context",
        "name": "create-react-context",
        "rawSpec": "^0.2.3",
        "spec": ">=0.2.3 <0.3.0",
        "type": "range"
      },
      "D:\\react_native\\navigation\\node_modules\\@react-navigation\\core"
    ]
  ],
  "_from": "create-react-context@>=0.2.3 <0.3.0",
  "_id": "create-react-context@0.2.3",
  "_inCache": true,
  "_location": "/create-react-context",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/create-react-context_0.2.3_1535393573583_0.4289409458013309"
  },
  "_npmUser": {
    "name": "thejameskyle",
    "email": "me@thejameskyle.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {
    "core-js": "1.2.7",
    "isomorphic-fetch": "2.2.1",
    "loose-envify": "1.4.0",
    "object-assign": "4.1.1",
    "promise": "7.3.1",
    "setimmediate": "1.0.5",
    "ua-parser-js": "0.7.19"
  },
  "_requested": {
    "raw": "create-react-context@^0.2.3",
    "scope": null,
    "escapedName": "create-react-context",
    "name": "create-react-context",
    "rawSpec": "^0.2.3",
    "spec": ">=0.2.3 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@react-navigation/core"
  ],
  "_resolved": "https://registry.npmjs.org/create-react-context/-/create-react-context-0.2.3.tgz",
  "_shasum": "9ec140a6914a22ef04b8b09b7771de89567cb6f3",
  "_shrinkwrap": null,
  "_spec": "create-react-context@^0.2.3",
  "_where": "D:\\react_native\\navigation\\node_modules\\@react-navigation\\core",
  "author": {
    "name": "James Kyle",
    "email": "me@thejameskyle.com"
  },
  "bugs": {
    "url": "https://github.com/thejameskyle/create-react-context/issues"
  },
  "dependencies": {
    "fbjs": "^0.8.0",
    "gud": "^1.0.0"
  },
  "description": "Polyfill for the proposed React context API",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-env": "^1.6.1",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-react": "^6.24.1",
    "enzyme": "^3.2.0",
    "enzyme-adapter-react-16": "^1.1.0",
    "enzyme-to-json": "^3.2.2",
    "flow-bin": "^0.60.1",
    "husky": "^0.14.3",
    "jest": "^21.2.1",
    "lint-staged": "^6.0.0",
    "prettier": "^1.9.1",
    "prop-types": "^15.6.0",
    "raf": "^3.4.0",
    "react": "^16.2.0",
    "react-dom": "^16.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-CQBmD0+QGgTaxDL3OX1IDXYqjkp2It4RIbcb99jS6AEg27Ga+a9G3JtK6SIu0HBwPLZlmwt9F7UwWA4Bn92Rag==",
    "shasum": "9ec140a6914a22ef04b8b09b7771de89567cb6f3",
    "tarball": "https://registry.npmjs.org/create-react-context/-/create-react-context-0.2.3.tgz",
    "fileCount": 8,
    "unpackedSize": 15444,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhD8mCRA9TVsSAnZWagAAeD0P/i/TyV7cx43DBbooMYTk\nXLo1R6JbM7Somk7Lqt9g283I36tzsxY4nS9XkdIp3kDdAZ76MjZvogWaihI8\n9f5tVfrKW7s5Vxb713vImCX/JvfSaCrxRaNifKYJgaFihTaeGnlVQztu6Cmt\nap5kKXenepsq423u18pfiNQfBh69rCpf5r5GqpU73tmnlrtwuqFcLL/CB0kZ\ns1ZklrL1FnVTxjg2aOsF9gXoVRY3vfu5Fv6TYpr+iHIrLu9mRT0lqxsaLkyO\naMyr8+NHXo6NeU6Ceeo+C31kB0yMTI7W3YqT/CKe3fd3eL/3on6e2+VC9/eS\nJqHElIasWc2znI7UQD43yXhtw/3DflHi/F2+KuT4PkDIF5GdFIcHN3JZ7ey9\nM33Zc3G7WPJshoHblbjtjfZdKu/nd8uaASEH4NDsF+qnIboZeysiqEzx8G4K\n2vaRaJeK5nhjkTL8KMLWC5tV1thvqDGcDEwndXkU3vpKT47P3WNEucILJVZE\nQnozUiOyiC5JeFtlSE75XDt6vLMoEKnvVH+W64N3BBOPGEOf0t3jDaBMxz2v\nQyYjmVoIis9BvnfDemOcwPvhMrjQikpMeO9JMrfS/SRNaNJY0xhI/htSqYuS\nz2iES7slno0lmnhgyDuEVQ+qyrObeC4Tw8Cf7iC1hRneLz6VST2k4D2Bz78U\nZpEm\r\n=UwUZ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib"
  ],
  "gitHead": "43ae1133176584dbbfba4428228a4e66ef27fb5f",
  "homepage": "https://github.com/thejameskyle/create-react-context#readme",
  "jest": {
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ]
  },
  "keywords": [
    "react",
    "context",
    "contextTypes",
    "polyfill",
    "ponyfill"
  ],
  "license": "SEE LICENSE IN LICENSE",
  "lint-staged": {
    "*.{js,md,json,js.flow,d.ts}": [
      "prettier --write",
      "git add"
    ]
  },
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "thejameskyle",
      "email": "me@thejameskyle.com"
    }
  ],
  "name": "create-react-context",
  "optionalDependencies": {},
  "peerDependencies": {
    "prop-types": "^15.0.0",
    "react": "^0.14.0 || ^15.0.0 || ^16.0.0"
  },
  "readme": "# create-react-context\n\n> Polyfill for the [proposed React context API](https://github.com/reactjs/rfcs/pull/2)\n\n## Install\n\n```sh\nyarn add create-react-context\n```\n\nYou'll need to also have `react` and `prop-types` installed.\n\n## API\n\n```js\nconst Context = createReactContext(defaultValue);\n// <Context.Provider value={providedValue}>{children}</Context.Provider>\n// ...\n// <Context.Consumer>{value => children}</Context.Consumer>\n```\n\n## Example\n\n```js\n// @flow\nimport React, { type Node } from 'react';\nimport createReactContext, { type Context } from 'create-react-context';\n\ntype Theme = 'light' | 'dark';\n// Pass a default theme to ensure type correctness\nconst ThemeContext: Context<Theme> = createReactContext('light');\n\nclass ThemeToggler extends React.Component<\n  { children: Node },\n  { theme: Theme }\n> {\n  state = { theme: 'light' };\n  render() {\n    return (\n      // Pass the current context value to the Provider's `value` prop.\n      // Changes are detected using strict comparison (Object.is)\n      <ThemeContext.Provider value={this.state.theme}>\n        <button\n          onClick={() => {\n            this.setState(state => ({\n              theme: state.theme === 'light' ? 'dark' : 'light'\n            }));\n          }}\n        >\n          Toggle theme\n        </button>\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nclass Title extends React.Component<{ children: Node }> {\n  render() {\n    return (\n      // The Consumer uses a render prop API. Avoids conflicts in the\n      // props namespace.\n      <ThemeContext.Consumer>\n        {theme => (\n          <h1 style={{ color: theme === 'light' ? '#000' : '#fff' }}>\n            {this.props.children}\n          </h1>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n```\n\n## Compatibility\n\nThis package only \"ponyfills\" the `React.createContext` API, not other\nunrelated React 16+ APIs. If you are using a version of React <16, keep\nin mind that you can only use features available in that version.\n\nFor example, you cannot pass children types aren't valid pre React 16:\n\n```js\n<Context.Provider>\n  <div/>\n  <div/>\n</Context.Provider>\n```\n\nIt will throw `A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.` because `<Context.Provider>` can only receive a single child element. To fix the error just wrap everyting in a single `<div>`:\n\n```js\n<Context.Provider>\n  <div>\n    <div/>\n    <div/>\n  </div>\n</Context.Provider>\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thejameskyle/create-react-context.git"
  },
  "scripts": {
    "build": "babel src -d lib --copy-files --ignore __tests__",
    "commit": "lint-staged",
    "flow": "flow",
    "format": "prettier --write '**/*.{js,md,json,js.flow,d.ts}'",
    "prepublish": "yarn build",
    "test": "jest"
  },
  "typings": "lib/index.d.ts",
  "version": "0.2.3"
}
